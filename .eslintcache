[{"/Users/zehairawan/Documents/Project/onethousandsaas/src/App.js":"1","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Dashboard.js":"2","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Editor.js":"3","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/ForgotPassword.js":"4","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Signup.js":"5","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Navbar.js":"6","/Users/zehairawan/Documents/Project/onethousandsaas/src/contexts/AuthContext.js":"7","/Users/zehairawan/Documents/Project/onethousandsaas/src/contexts/EditorContext.js":"8","/Users/zehairawan/Documents/Project/onethousandsaas/src/contexts/DataContext.js":"9","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/PrivateRoute.js":"10","/Users/zehairawan/Documents/Project/onethousandsaas/src/index.js":"11","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Login.js":"12","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/UpdateProfile.js":"13","/Users/zehairawan/Documents/Project/onethousandsaas/src/firebase.js":"14","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Post/CreatePost.js":"15","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Post/EditPost.js":"16","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Post/Post.js":"17","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Blog/Blogpost.js":"18","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Blog/Blog.js":"19","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Blog/CreateBlogpost.js":"20","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Blog/EditBlogpost.js":"21"},{"size":2297,"mtime":1606811295698,"results":"22","hashOfConfig":"23"},{"size":7514,"mtime":1606807073002,"results":"24","hashOfConfig":"23"},{"size":2868,"mtime":1606527474942,"results":"25","hashOfConfig":"23"},{"size":1557,"mtime":1606528040509,"results":"26","hashOfConfig":"23"},{"size":1841,"mtime":1606528087679,"results":"27","hashOfConfig":"23"},{"size":948,"mtime":1606774360038,"results":"28","hashOfConfig":"23"},{"size":1302,"mtime":1606386372265,"results":"29","hashOfConfig":"23"},{"size":416,"mtime":1606603284012,"results":"30","hashOfConfig":"23"},{"size":442,"mtime":1606554395664,"results":"31","hashOfConfig":"23"},{"size":464,"mtime":1606386446347,"results":"32","hashOfConfig":"23"},{"size":226,"mtime":1606294531795,"results":"33","hashOfConfig":"23"},{"size":1722,"mtime":1606393856101,"results":"34","hashOfConfig":"23"},{"size":2445,"mtime":1606388885154,"results":"35","hashOfConfig":"23"},{"size":790,"mtime":1606731504589,"results":"36","hashOfConfig":"23"},{"size":2104,"mtime":1606814858548,"results":"37","hashOfConfig":"23"},{"size":1357,"mtime":1606811145383,"results":"38","hashOfConfig":"23"},{"size":538,"mtime":1606611519200,"results":"39","hashOfConfig":"23"},{"size":1067,"mtime":1606732422502,"results":"40","hashOfConfig":"23"},{"size":1809,"mtime":1606732086662,"results":"41","hashOfConfig":"23"},{"size":2141,"mtime":1606728790148,"results":"42","hashOfConfig":"23"},{"size":2674,"mtime":1606732755469,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"16g1ewg",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},"/Users/zehairawan/Documents/Project/onethousandsaas/src/App.js",[],["93","94"],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Dashboard.js",["95","96"],"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useData } from '../contexts/DataContext';\nimport { useEditor } from '../contexts/EditorContext';\nimport { db } from '../firebase';\nimport Editor from './Editor';\n\nconst Dashboard = () => {\n  // const { currentUser } = useAuth();\n\n  const [loading, setLoading] = useState(true);\n  const [addNewSaaS, setAddNewSaaS] = useState(false);\n\n  const { saas, setSaas, setPostId } = useData();\n  const { setPostData } = useEditor();\n\n  const [formData, setFormData] = useState({\n    title: '',\n    tagline: '',\n    category: '',\n    link: '',\n    competitors: '',\n  });\n\n  const { title, tagline, category, link, competitors } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      await db.collection('saas').add({\n        title,\n        tagline,\n        category,\n        link,\n        competitors,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        details: '',\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    setFormData({\n      ...formData,\n      title: '',\n      tagline: '',\n      category: '',\n      link: '',\n      competitors: '',\n    });\n    // alert('Added!');\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    const unsubscribe = db\n      .collection('saas')\n      .orderBy('timestamp', 'desc')\n      .onSnapshot((snapshot) => {\n        if (snapshot.size) {\n          const list = [];\n          snapshot.forEach((doc) => {\n            const {\n              title,\n              tagline,\n              category,\n              link,\n              competitors,\n              analysis,\n            } = doc.data();\n\n            list.push({\n              id: doc.id,\n              title,\n              tagline,\n              category,\n              link,\n              competitors,\n              isEditable: false,\n              analysis,\n            });\n          });\n          setSaas(list);\n          setLoading(false);\n        } else {\n          // it's empty\n          alert('fetch data failed!');\n          setLoading(false);\n        }\n      });\n    return () => unsubscribe();\n\n    // async function getData() {\n    //   const snapshot = await db.collection('saas').get();\n    //   if (snapshot.empty) {\n    //     console.log('No matching documents.');\n    //     return;\n    //   }\n    //   const data = [];\n    //   snapshot.forEach((doc) => {\n    //     data.push(doc.data());\n    //   });\n    //   setSaas(data);\n    // }\n    // getData();\n  }, []);\n\n  const handleDelete = async (docId) => {\n    try {\n      await db.collection('saas').doc(docId).delete();\n    } catch (error) {\n      console.log(error);\n    }\n    // alert('Deleted!');\n  };\n\n  const handleUpdate = (id) => {\n    const newSaas = saas.map((item) => {\n      if (item.id === id) {\n        const updatedItem = {\n          ...item,\n          isEditable: !item.isEditable,\n        };\n\n        return updatedItem;\n      }\n\n      return item;\n    });\n\n    setSaas(newSaas);\n  };\n\n  if (loading) {\n    return (\n      <div>\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"flex flex-col\">\n        <button\n          onClick={() => setAddNewSaaS(!addNewSaaS)}\n          className={\n            'block bg-red-200 rounded-lg p-1 mt-4 w-32  self-end focus:outline-none ' +\n            (addNewSaaS ? 'hidden' : 'block')\n          }\n        >\n          Add new SaaS\n        </button>\n      </div>\n\n      <h1 className=\"font-bold\">\n        Search among <span className=\"text-red-300\">{saas.length}</span> SaaS\n        company in our database\n      </h1>\n      <div\n        className={\n          'flex-col border-2 border-red-300 w-3/6 m-6 p-4 ' +\n          (addNewSaaS ? 'block' : 'hidden')\n        }\n      >\n        <h3 className=\"font-bold\">Add new SaaS</h3>\n        <p>Title:</p>\n        <input\n          className=\"border border-red-400 rounded-lg focus:outline-none\"\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={onChange}\n        />\n\n        <p>Tagline:</p>\n        <input\n          className=\"border border-red-400 rounded-lg focus:outline-none\"\n          type=\"text\"\n          name=\"tagline\"\n          value={tagline}\n          onChange={onChange}\n        />\n\n        <p>Category:</p>\n        <input\n          className=\"border border-red-400 rounded-lg focus:outline-none\"\n          type=\"text\"\n          name=\"category\"\n          value={category}\n          onChange={onChange}\n        />\n\n        <p>Link:</p>\n        <input\n          className=\"border border-red-400 rounded-lg focus:outline-none\"\n          type=\"text\"\n          name=\"link\"\n          value={link}\n          onChange={onChange}\n        />\n\n        <p>Competitors:</p>\n        <input\n          className=\"border border-red-400 rounded-lg focus:outline-none\"\n          type=\"text\"\n          name=\"competitors\"\n          value={competitors}\n          onChange={onChange}\n        />\n\n        <button\n          onClick={onSubmit}\n          className=\"block bg-red-200 rounded-lg p-1 mt-4 w-3/6 self-center focus:outline-none\"\n        >\n          Submit\n        </button>\n\n        <button\n          onClick={() => setAddNewSaaS(!addNewSaaS)}\n          className=\"block bg-red-200 rounded-lg p-1 mt-4 w-3/6 self-center focus:outline-none\"\n        >\n          Cancel\n        </button>\n      </div>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3\">\n        {saas.map((e) => {\n          if (e.isEditable) {\n            return <Editor key={() => uuidv4()} e={e} />;\n          } else {\n            return (\n              <div\n                key={e.id}\n                className=\"flex flex-col border-2 border-blue-500 m-6 p-2 rounded-lg\"\n              >\n                <h1 className=\"font-bold block\">Title: </h1>\n                <a href={e.link} target=\"blank\">\n                  {e.title}*\n                </a>\n\n                <h1 className=\"font-bold\">Tagline:</h1>\n                <p> {e.tagline}</p>\n                <h1 className=\"font-bold\">Category:</h1>\n                <p> {e.category}</p>\n\n                <div className=\"flex justify-between mt-4\">\n                  <div className=\"flex flex-col\">\n                    {e.details ? (\n                      <Link\n                        onClick={() => setPostId(e.id)}\n                        to={`/post/${e.title.toLowerCase()}`}\n                        className=\" block h-4 bg-green-200 rounded-lg  w-18 h-3/6 p-2  focus:outline-none\"\n                      >\n                        View Details\n                      </Link>\n                    ) : null}\n                    <button\n                      className=\"bg-red-200 rounded-lg p-2 w-16 mt-4 focus:outline-none\"\n                      onClick={() => handleDelete(e.id)}\n                    >\n                      Delete\n                    </button>\n                    <button\n                      className=\"bg-red-200 rounded-lg p-2  mt-4 w-16  focus:outline-none\"\n                      onClick={() => handleUpdate(e.id)}\n                    >\n                      Edit\n                    </button>\n                  </div>\n                </div>\n              </div>\n            );\n          }\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Editor.js",["97"],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/ForgotPassword.js",[],["98","99"],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Signup.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Navbar.js",["100","101"],"import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst Navbar = () => {\n  const { currentUser, logout } = useAuth();\n  const history = useHistory();\n  const [error, setError] = useState('');\n\n  async function handleLogout() {\n    setError('');\n\n    try {\n      await logout();\n      history.push('/login');\n    } catch {\n      setError('Failed to log out');\n    }\n  }\n\n  return (\n    <div className=\"flex justify-between\">\n      <Link to=\"/\">Homepage</Link>\n      <Link to=\"/blog\">Blog</Link>\n      <Link to=\"/create-blogpost\">Manage Blogpost</Link>\n      <Link to=\"/create-post\">Manage Post</Link>\n\n      {/* <p> Welcome, {currentUser.email}</p> */}\n\n      {/* <Link to=\"/update-profile\">Update Profile</Link> */}\n\n      <button className=\"self-start\" onClick={handleLogout}>\n        Logout\n      </button>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/Users/zehairawan/Documents/Project/onethousandsaas/src/contexts/AuthContext.js",[],["102","103"],"/Users/zehairawan/Documents/Project/onethousandsaas/src/contexts/EditorContext.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/contexts/DataContext.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/PrivateRoute.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/index.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Login.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/UpdateProfile.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/firebase.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Post/CreatePost.js",["104","105"],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Post/EditPost.js",["106"],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Post/Post.js",["107"],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Blog/Blogpost.js",["108","109"],"import React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { db } from '../../firebase';\n\nconst Blogpost = ({ match }) => {\n  const [blogPost, setBlogPost] = useState({\n    title: '',\n    content: '',\n    image: '',\n  });\n\n  const { title, content, image } = blogPost;\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const res = await db\n          .collection('blogpost')\n          .where('slug', '==', match.params.slugId)\n          .get();\n\n        res.forEach((doc) => {\n          const { content, title, image } = doc.data();\n          setBlogPost({ ...blogPost, title, content, image });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getData();\n  }, []);\n\n  return (\n    <div className=\"flex flex-col items-center mx-12\">\n      <h1 className=\"my-6 font-bold text-3xl\">{title}</h1>\n      <ReactMarkdown className=\"prose  w-full\" source={content}></ReactMarkdown>\n      <img src={image} className=\"w-3/6\"></img>\n    </div>\n  );\n};\n\nexport default Blogpost;\n","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Blog/Blog.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Blog/CreateBlogpost.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Blog/EditBlogpost.js",["110"],"import React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { app, db } from '../../firebase';\n\nconst EditBlogpost = ({ match }) => {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [slug, setSlug] = useState('');\n\n  const [fileUrl, setFileUrl] = React.useState(null);\n\n  const onFileChange = async (e) => {\n    const file = e.target.files[0];\n    const storageRef = app.storage().ref();\n    const fileRef = storageRef.child(file.name);\n    await fileRef.put(file);\n    setFileUrl(await fileRef.getDownloadURL());\n  };\n\n  useEffect(() => {\n    db.collection('blogpost')\n      .doc(match.params.blogPostId)\n      .get()\n      .then(function (doc) {\n        if (doc.exists) {\n          const { title, content, slug } = doc.data();\n          setTitle(title);\n          setContent(content);\n          setSlug(slug);\n        } else {\n          console.log('No such document!');\n        }\n      })\n      .catch(function (error) {\n        console.log('Error getting document:', error);\n      });\n  }, []);\n\n  const handleSubmit = async (id) => {\n    try {\n      await db\n        .collection('blogpost')\n        .doc(id)\n        .update({ title, content, slug, image: fileUrl });\n      toast.success('🎉 Your changes have been saved!');\n    } catch (error) {\n      console.log(error);\n      toast.error('Failed to save changes');\n    }\n  };\n\n  return (\n    <div>\n      Edit Blogpost\n      <button\n        className=\"block bg-red-200 rounded-lg p-2  mt-4 w-16  focus:outline-none\"\n        onClick={() => handleSubmit(match.params.blogPostId)}\n      >\n        Submit\n      </button>\n      <h3>Title:</h3>\n      <input\n        className=\"block m-4\"\n        type=\"text\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n      />\n      <h3>Slug:</h3>\n      <input\n        className=\"block m-4\"\n        type=\"text\"\n        value={slug}\n        onChange={(e) => setSlug(e.target.value)}\n      />\n      <h3>Upload Image:</h3>\n      <input type=\"file\" onChange={onFileChange} />\n      <button onClick={() => console.log(fileUrl)}>Upload</button>\n\n      <div className=\"flex\">\n        <textarea\n          className=\"block border border-gray-500 w-3/6\"\n          type=\"text\"\n          value={content}\n          placeholder=\"type here\"\n          onChange={(e) => setContent(e.target.value)}\n        />\n        <ReactMarkdown\n          className=\"prose w-3/6 border border-gray-500\"\n          source={content}\n        ></ReactMarkdown>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default EditBlogpost;\n",{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":18,"column":11,"nodeType":"117","messageId":"118","endLine":18,"endColumn":22},{"ruleId":"119","severity":1,"message":"120","line":112,"column":6,"nodeType":"121","endLine":112,"endColumn":8,"suggestions":"122"},{"ruleId":"115","severity":1,"message":"123","line":59,"column":9,"nodeType":"117","messageId":"118","endLine":59,"endColumn":20},{"ruleId":"111","replacedBy":"124"},{"ruleId":"113","replacedBy":"125"},{"ruleId":"115","severity":1,"message":"126","line":6,"column":11,"nodeType":"117","messageId":"118","endLine":6,"endColumn":22},{"ruleId":"115","severity":1,"message":"127","line":8,"column":10,"nodeType":"117","messageId":"118","endLine":8,"endColumn":15},{"ruleId":"111","replacedBy":"128"},{"ruleId":"113","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":4,"column":21,"nodeType":"132","messageId":"133","endLine":4,"endColumn":23},{"ruleId":"134","severity":1,"message":"135","line":65,"column":60,"nodeType":"136","messageId":"133","endLine":65,"endColumn":62},{"ruleId":"119","severity":1,"message":"137","line":28,"column":6,"nodeType":"121","endLine":28,"endColumn":8,"suggestions":"138"},{"ruleId":"119","severity":1,"message":"139","line":19,"column":6,"nodeType":"121","endLine":19,"endColumn":8,"suggestions":"140"},{"ruleId":"119","severity":1,"message":"141","line":30,"column":6,"nodeType":"121","endLine":30,"endColumn":8,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":36,"column":7,"nodeType":"145","endLine":36,"endColumn":42},{"ruleId":"119","severity":1,"message":"146","line":38,"column":6,"nodeType":"121","endLine":38,"endColumn":8,"suggestions":"147"},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'setPostData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setSaas'. Either include it or remove the dependency array.","ArrayExpression",["150"],"'inputFields' is assigned a value but never used.",["148"],["149"],"'currentUser' is assigned a value but never used.","'error' is assigned a value but never used.",["148"],["149"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook useEffect has a missing dependency: 'docId'. Either include it or remove the dependency array.",["151"],"React Hook useEffect has a missing dependency: 'match.params.postId'. Either include it or remove the dependency array.",["152"],"React Hook useEffect has missing dependencies: 'blogPost' and 'match.params.slugId'. Either include them or remove the dependency array. You can also do a functional update 'setBlogPost(b => ...)' if you only need 'blogPost' in the 'setBlogPost' call.",["153"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'match.params.blogPostId'. Either include it or remove the dependency array.",["154"],"no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [setSaas]",{"range":"165","text":"166"},"Update the dependencies array to be: [docId]",{"range":"167","text":"168"},"Update the dependencies array to be: [match.params.postId]",{"range":"169","text":"170"},"Update the dependencies array to be: [blogPost, match.params.slugId]",{"range":"171","text":"172"},"Update the dependencies array to be: [match.params.blogPostId]",{"range":"173","text":"174"},[2733,2735],"[setSaas]",[754,756],"[docId]",[476,478],"[match.params.postId]",[762,764],"[blogPost, match.params.slugId]",[1141,1143],"[match.params.blogPostId]"]
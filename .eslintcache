[{"/Users/zehairawan/Documents/Project/onethousandsaas/src/App.js":"1","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Dashboard.js":"2","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Editor.js":"3","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/ForgotPassword.js":"4","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Signup.js":"5","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Navbar.js":"6","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Blog.js":"7","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/BlogPost.js":"8","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/WriteBlogPost.js":"9","/Users/zehairawan/Documents/Project/onethousandsaas/src/contexts/AuthContext.js":"10","/Users/zehairawan/Documents/Project/onethousandsaas/src/contexts/EditorContext.js":"11","/Users/zehairawan/Documents/Project/onethousandsaas/src/contexts/DataContext.js":"12","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/PrivateRoute.js":"13","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Analysis/CreateAnalysis.js":"14","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Analysis/EditAnalysis.js":"15","/Users/zehairawan/Documents/Project/onethousandsaas/src/index.js":"16","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Login.js":"17","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Analysis/Post.js":"18","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/UpdateProfile.js":"19","/Users/zehairawan/Documents/Project/onethousandsaas/src/firebase.js":"20"},{"size":2130,"mtime":1606650120995,"results":"21","hashOfConfig":"22"},{"size":8229,"mtime":1606603603320,"results":"23","hashOfConfig":"22"},{"size":2868,"mtime":1606527474942,"results":"24","hashOfConfig":"22"},{"size":1557,"mtime":1606528040509,"results":"25","hashOfConfig":"22"},{"size":1841,"mtime":1606528087679,"results":"26","hashOfConfig":"22"},{"size":950,"mtime":1606550055671,"results":"27","hashOfConfig":"22"},{"size":1794,"mtime":1606651784716,"results":"28","hashOfConfig":"22"},{"size":185,"mtime":1606531269890,"results":"29","hashOfConfig":"22"},{"size":1411,"mtime":1606650765573,"results":"30","hashOfConfig":"22"},{"size":1302,"mtime":1606386372265,"results":"31","hashOfConfig":"22"},{"size":416,"mtime":1606603284012,"results":"32","hashOfConfig":"22"},{"size":442,"mtime":1606554395664,"results":"33","hashOfConfig":"22"},{"size":464,"mtime":1606386446347,"results":"34","hashOfConfig":"22"},{"size":1046,"mtime":1606611443891,"results":"35","hashOfConfig":"36"},{"size":1373,"mtime":1606566235156,"results":"37","hashOfConfig":"22"},{"size":226,"mtime":1606294531795,"results":"38","hashOfConfig":"22"},{"size":1722,"mtime":1606393856101,"results":"39","hashOfConfig":"22"},{"size":538,"mtime":1606611519200,"results":"40","hashOfConfig":"36"},{"size":2445,"mtime":1606388885154,"results":"41","hashOfConfig":"22"},{"size":731,"mtime":1606295697791,"results":"42","hashOfConfig":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16g1ewg",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"12lan94",{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zehairawan/Documents/Project/onethousandsaas/src/App.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Dashboard.js",["88"],"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useData } from '../contexts/DataContext';\nimport { useEditor } from '../contexts/EditorContext';\nimport { db } from '../firebase';\nimport Editor from './Editor';\n\nconst Dashboard = () => {\n  // const { currentUser } = useAuth();\n\n  const [loading, setLoading] = useState(true);\n  const [addNewSaaS, setAddNewSaaS] = useState(false);\n\n  const { saas, setSaas, setPostId } = useData();\n  const { setPostData } = useEditor();\n\n  const [formData, setFormData] = useState({\n    title: '',\n    tagline: '',\n    category: '',\n    link: '',\n    competitors: '',\n  });\n\n  const { title, tagline, category, link, competitors } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      await db.collection('saas').add({\n        title,\n        tagline,\n        category,\n        link,\n        competitors,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        analysis: false,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    setFormData({\n      ...formData,\n      title: '',\n      tagline: '',\n      category: '',\n      link: '',\n      competitors: '',\n    });\n    // alert('Added!');\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    const unsubscribe = db\n      .collection('saas')\n      .orderBy('timestamp', 'desc')\n      .onSnapshot((snapshot) => {\n        if (snapshot.size) {\n          const list = [];\n          snapshot.forEach((doc) => {\n            const {\n              title,\n              tagline,\n              category,\n              link,\n              competitors,\n              analysis,\n            } = doc.data();\n\n            list.push({\n              id: doc.id,\n              title,\n              tagline,\n              category,\n              link,\n              competitors,\n              isEditable: false,\n              analysis,\n            });\n          });\n          setSaas(list);\n          setLoading(false);\n        } else {\n          // it's empty\n          alert('fetch data failed!');\n          setLoading(false);\n        }\n      });\n    return () => unsubscribe();\n\n    // async function getData() {\n    //   const snapshot = await db.collection('saas').get();\n    //   if (snapshot.empty) {\n    //     console.log('No matching documents.');\n    //     return;\n    //   }\n    //   const data = [];\n    //   snapshot.forEach((doc) => {\n    //     data.push(doc.data());\n    //   });\n    //   setSaas(data);\n    // }\n    // getData();\n  }, []);\n\n  const handleDelete = async (docId) => {\n    try {\n      await db.collection('saas').doc(docId).delete();\n    } catch (error) {\n      console.log(error);\n    }\n    // alert('Deleted!');\n  };\n\n  const handleUpdate = (id) => {\n    const newSaas = saas.map((item) => {\n      if (item.id === id) {\n        const updatedItem = {\n          ...item,\n          isEditable: !item.isEditable,\n        };\n\n        return updatedItem;\n      }\n\n      return item;\n    });\n\n    setSaas(newSaas);\n  };\n\n  if (loading) {\n    return (\n      <div>\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"flex flex-col\">\n        <button\n          onClick={() => setAddNewSaaS(!addNewSaaS)}\n          className={\n            'block bg-red-200 rounded-lg p-1 mt-4 w-32  self-end focus:outline-none ' +\n            (addNewSaaS ? 'hidden' : 'block')\n          }\n        >\n          Add new SaaS\n        </button>\n      </div>\n\n      <h1 className=\"font-bold\">\n        Search among <span className=\"text-red-300\">{saas.length}</span> SaaS\n        company in our database\n      </h1>\n      <div\n        className={\n          'flex-col border-2 border-red-300 w-3/6 m-6 p-4 ' +\n          (addNewSaaS ? 'block' : 'hidden')\n        }\n      >\n        <h3 className=\"font-bold\">Add new SaaS</h3>\n        <p>Title:</p>\n        <input\n          className=\"border border-red-400 rounded-lg focus:outline-none\"\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={onChange}\n        />\n\n        <p>Tagline:</p>\n        <input\n          className=\"border border-red-400 rounded-lg focus:outline-none\"\n          type=\"text\"\n          name=\"tagline\"\n          value={tagline}\n          onChange={onChange}\n        />\n\n        <p>Category:</p>\n        <input\n          className=\"border border-red-400 rounded-lg focus:outline-none\"\n          type=\"text\"\n          name=\"category\"\n          value={category}\n          onChange={onChange}\n        />\n\n        <p>Link:</p>\n        <input\n          className=\"border border-red-400 rounded-lg focus:outline-none\"\n          type=\"text\"\n          name=\"link\"\n          value={link}\n          onChange={onChange}\n        />\n\n        <p>Competitors:</p>\n        <input\n          className=\"border border-red-400 rounded-lg focus:outline-none\"\n          type=\"text\"\n          name=\"competitors\"\n          value={competitors}\n          onChange={onChange}\n        />\n\n        <button\n          onClick={onSubmit}\n          className=\"block bg-red-200 rounded-lg p-1 mt-4 w-3/6 self-center focus:outline-none\"\n        >\n          Submit\n        </button>\n\n        <button\n          onClick={() => setAddNewSaaS(!addNewSaaS)}\n          className=\"block bg-red-200 rounded-lg p-1 mt-4 w-3/6 self-center focus:outline-none\"\n        >\n          Cancel\n        </button>\n      </div>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3\">\n        {saas.map((e) => {\n          if (e.isEditable) {\n            return <Editor key={() => uuidv4()} e={e} />;\n          } else {\n            return (\n              <div\n                key={e.id}\n                className=\"flex flex-col border-2 border-blue-500 m-6 p-2 rounded-lg\"\n              >\n                <h1 className=\"font-bold block\">Title: </h1>\n                <a href={e.link} target=\"blank\">\n                  {e.title}*\n                </a>\n\n                <h1 className=\"font-bold\">Tagline:</h1>\n                <p> {e.tagline}</p>\n                <h1 className=\"font-bold\">Category:</h1>\n                <p> {e.category}</p>\n\n                <div className=\"flex justify-between mt-4\">\n                  {e.analysis ? (\n                    <Link\n                      to=\"/edit-analysis\"\n                      // onClick={() => {\n                      //   setDocId(e.analysis);\n                      // }}\n                      className=\" block bg-yellow-200 rounded-lg  w-18 h-3/6 p-2 focus:outline-none\"\n                    >\n                      Edit Analysis\n                    </Link>\n                  ) : (\n                    <Link\n                      to=\"/create-analysis\"\n                      onClick={() => setPostData({ id: e.id, title: e.title })}\n                      className=\" block bg-blue-200 rounded-lg  w-18 h-10 p-2 focus:outline-none\"\n                    >\n                      Write Analysis\n                    </Link>\n                  )}\n\n                  <div className=\"flex flex-col\">\n                    <Link\n                      onClick={() => setPostId(e.id)}\n                      to={`/post/${e.title.toLowerCase()}`}\n                      className=\" block h-4 bg-green-200 rounded-lg  w-18 h-3/6 p-2  focus:outline-none\"\n                    >\n                      View Analysis\n                    </Link>\n                    <button\n                      className=\"bg-red-200 rounded-lg p-2 w-16 mt-4 focus:outline-none\"\n                      onClick={() => handleDelete(e.id)}\n                    >\n                      Delete\n                    </button>\n                    <button\n                      className=\"bg-red-200 rounded-lg p-2  mt-4 w-16  focus:outline-none\"\n                      onClick={() => handleUpdate(e.id)}\n                    >\n                      Edit\n                    </button>\n                  </div>\n                </div>\n              </div>\n            );\n          }\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Editor.js",["89"],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/ForgotPassword.js",[],["90","91"],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Signup.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Navbar.js",["92","93"],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Blog.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/BlogPost.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/WriteBlogPost.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/contexts/AuthContext.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/contexts/EditorContext.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/contexts/DataContext.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/PrivateRoute.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Analysis/CreateAnalysis.js",["94"],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Analysis/EditAnalysis.js",["95"],"import React, { useEffect, useState } from 'react';\nimport { useEditor } from '../../contexts/EditorContext';\nimport { db } from '../../firebase';\n\nconst EditAnalysis = () => {\n  const [content, setContent] = useState('');\n\n  const { docId } = useEditor();\n\n  useEffect(() => {\n    const getData = () => {\n      db.collection('analysis')\n        .doc(docId)\n        .get()\n        .then(function (doc) {\n          if (doc.exists) {\n            console.log('Document data:', doc.data());\n          } else {\n            // doc.data() will be undefined in this case\n            console.log('No such document!');\n          }\n        })\n        .catch(function (error) {\n          console.log('Error getting document:', error);\n        });\n    };\n    getData();\n  }, []);\n\n  const handleSubmit = async () => {\n    try {\n      await db.collection('analysis').doc(docId).update({\n        content,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (!docId) {\n    return <h1>Please Select your SaaS</h1>;\n  }\n\n  return (\n    <div>\n      <h2>Editing Anaylsis For {docId}</h2>\n      <input\n        className=\"block\"\n        type=\"text\"\n        value={content}\n        placeholder=\"type here\"\n        onChange={(e) => setContent(e.target.value)}\n      />\n      <button onClick={handleSubmit}>Post now!</button>\n    </div>\n  );\n};\n\nexport default EditAnalysis;\n","/Users/zehairawan/Documents/Project/onethousandsaas/src/index.js",[],["96","97"],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Login.js",[],["98","99"],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Analysis/Post.js",["100"],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/UpdateProfile.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/firebase.js",[],{"ruleId":"101","severity":1,"message":"102","line":112,"column":6,"nodeType":"103","endLine":112,"endColumn":8,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":59,"column":9,"nodeType":"107","messageId":"108","endLine":59,"endColumn":20},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"105","severity":1,"message":"113","line":6,"column":11,"nodeType":"107","messageId":"108","endLine":6,"endColumn":22},{"ruleId":"105","severity":1,"message":"114","line":8,"column":10,"nodeType":"107","messageId":"108","endLine":8,"endColumn":15},{"ruleId":"115","severity":1,"message":"116","line":5,"column":25,"nodeType":"117","messageId":"118","endLine":5,"endColumn":27},{"ruleId":"101","severity":1,"message":"119","line":28,"column":6,"nodeType":"103","endLine":28,"endColumn":8,"suggestions":"120"},{"ruleId":"109","replacedBy":"121"},{"ruleId":"111","replacedBy":"122"},{"ruleId":"109","replacedBy":"123"},{"ruleId":"111","replacedBy":"124"},{"ruleId":"101","severity":1,"message":"125","line":19,"column":6,"nodeType":"103","endLine":19,"endColumn":8,"suggestions":"126"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setSaas'. Either include it or remove the dependency array.","ArrayExpression",["127"],"no-unused-vars","'inputFields' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["128"],"no-negated-in-lhs",["129"],"'currentUser' is assigned a value but never used.","'error' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'docId'. Either include it or remove the dependency array.",["130"],["128"],["129"],["128"],["129"],"React Hook useEffect has a missing dependency: 'match.params.postId'. Either include it or remove the dependency array.",["131"],{"desc":"132","fix":"133"},"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [setSaas]",{"range":"138","text":"139"},"Update the dependencies array to be: [docId]",{"range":"140","text":"141"},"Update the dependencies array to be: [match.params.postId]",{"range":"142","text":"143"},[2737,2739],"[setSaas]",[762,764],"[docId]",[476,478],"[match.params.postId]"]
[{"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Dashboard.js":"1","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Editor.js":"2","/Users/zehairawan/Documents/Project/onethousandsaas/src/index.js":"3","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/ForgotPassword.js":"4","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Navbar.js":"5","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Signup.js":"6","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Blog/Blog.js":"7","/Users/zehairawan/Documents/Project/onethousandsaas/src/App.js":"8","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/PrivateRoute.js":"9","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Blog/Blogpost.js":"10","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/UpdateProfile.js":"11","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Login.js":"12"},{"size":7808,"mtime":1607725482300,"results":"13","hashOfConfig":"14"},{"size":3398,"mtime":1607773896723,"results":"15","hashOfConfig":"14"},{"size":226,"mtime":1606294531795,"results":"16","hashOfConfig":"14"},{"size":1557,"mtime":1606528040509,"results":"17","hashOfConfig":"14"},{"size":952,"mtime":1606817312900,"results":"18","hashOfConfig":"14"},{"size":1841,"mtime":1606528087679,"results":"19","hashOfConfig":"14"},{"size":1809,"mtime":1606732086662,"results":"20","hashOfConfig":"14"},{"size":2325,"mtime":1606817282340,"results":"21","hashOfConfig":"14"},{"size":464,"mtime":1606386446347,"results":"22","hashOfConfig":"14"},{"size":1067,"mtime":1606732422502,"results":"23","hashOfConfig":"14"},{"size":2445,"mtime":1606388885154,"results":"24","hashOfConfig":"14"},{"size":1722,"mtime":1606393856101,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"16g1ewg",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Dashboard.js",["56","57","58"],"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useData } from '../contexts/DataContext';\nimport { useEditor } from '../contexts/EditorContext';\nimport { db } from '../firebase';\nimport Editor from './Editor';\n\nconst Dashboard = () => {\n  // const { currentUser } = useAuth();\n\n  const [loading, setLoading] = useState(true);\n  const [addNewSaaS, setAddNewSaaS] = useState(false);\n\n  const { saas, setSaas, setPostId } = useData();\n  const { setPostData } = useEditor();\n\n  const [formData, setFormData] = useState({\n    title: '',\n    tagline: '',\n    category: '',\n    link: '',\n    competitors: '',\n    pricing:''\n  });\n\n  const { title, tagline, category, link, competitors ,pricing} = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      await db.collection('saas').add({\n        title,\n        tagline,\n        category,\n        link,\n        competitors,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        details: '',\n        pricing\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    setFormData({\n      ...formData,\n      title: '',\n      tagline: '',\n      category: '',\n      link: '',\n      competitors: '',\n      pricing:''\n    });\n    // alert('Added!');\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    const unsubscribe = db\n      .collection('saas')\n      .orderBy('timestamp', 'desc')\n      .onSnapshot((snapshot) => {\n        if (snapshot.size) {\n          const list = [];\n          snapshot.forEach((doc) => {\n            const {\n              title,\n              tagline,\n              category,\n              link,\n              competitors,\n              details,\n              pricing\n            } = doc.data();\n\n            list.push({\n              id: doc.id,\n              title,\n              tagline,\n              category,\n              link,\n              competitors,\n              isEditable: false,\n              details,\n              pricing\n            });\n          });\n          setSaas(list);\n          setLoading(false);\n        } else {\n          // it's empty\n          alert('fetch data failed!');\n          setLoading(false);\n        }\n      });\n    return () => unsubscribe();\n\n    // async function getData() {\n    //   const snapshot = await db.collection('saas').get();\n    //   if (snapshot.empty) {\n    //     console.log('No matching documents.');\n    //     return;\n    //   }\n    //   const data = [];\n    //   snapshot.forEach((doc) => {\n    //     data.push(doc.data());\n    //   });\n    //   setSaas(data);\n    // }\n    // getData();\n  }, []);\n\n  const handleDelete = async (docId) => {\n    try {\n      await db.collection('saas').doc(docId).delete();\n    } catch (error) {\n      console.log(error);\n    }\n    // alert('Deleted!');\n  };\n\n  const handleUpdate = (id) => {\n    const newSaas = saas.map((item) => {\n      if (item.id === id) {\n        const updatedItem = {\n          ...item,\n          isEditable: !item.isEditable,\n        };\n\n        return updatedItem;\n      }\n\n      return item;\n    });\n\n    setSaas(newSaas);\n  };\n\n  if (loading) {\n    return (\n      <div>\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"flex flex-col\">\n        <button\n          onClick={() => setAddNewSaaS(!addNewSaaS)}\n          className={\n            'block bg-red-200 rounded-lg p-1 mt-4 w-32  self-end focus:outline-none ' +\n            (addNewSaaS ? 'hidden' : 'block')\n          }\n        >\n          Add new SaaS\n        </button>\n      </div>\n\n      <h1 className=\"font-bold\">\n        Search among <span className=\"text-red-300\">{saas.length}</span> SaaS\n        company in our database\n      </h1>\n      <div\n        className={\n          'flex-col border-2 border-red-300 w-3/6 m-6 p-4 ' +\n          (addNewSaaS ? 'block' : 'hidden')\n        }\n      >\n        <h3 className=\"font-bold\">Add new SaaS</h3>\n        <p>Title:</p>\n        <input\n          className=\"border border-red-400 rounded-lg focus:outline-none\"\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={onChange}\n        />\n\n        <p>Tagline:</p>\n        <input\n          className=\"border border-red-400 rounded-lg focus:outline-none\"\n          type=\"text\"\n          name=\"tagline\"\n          value={tagline}\n          onChange={onChange}\n        />\n\n        <p>Category:</p>\n        <input\n          className=\"border border-red-400 rounded-lg focus:outline-none\"\n          type=\"text\"\n          name=\"category\"\n          value={category}\n          onChange={onChange}\n        />\n\n        <p>Link:</p>\n        <input\n          className=\"border border-red-400 rounded-lg focus:outline-none\"\n          type=\"text\"\n          name=\"link\"\n          value={link}\n          onChange={onChange}\n        />\n\n        <p>Competitors:</p>\n        <input\n          className=\"border border-red-400 rounded-lg focus:outline-none\"\n          type=\"text\"\n          name=\"competitors\"\n          value={competitors}\n          onChange={onChange}\n        />\n\n        <button\n          onClick={onSubmit}\n          className=\"block bg-red-200 rounded-lg p-1 mt-4 w-3/6 self-center focus:outline-none\"\n        >\n          Submit\n        </button>\n\n        <button\n          onClick={() => setAddNewSaaS(!addNewSaaS)}\n          className=\"block bg-red-200 rounded-lg p-1 mt-4 w-3/6 self-center focus:outline-none\"\n        >\n          Cancel\n        </button>\n      </div>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3\">\n        {saas.map((e) => {\n          if (e.isEditable) {\n            return <Editor key={() => uuidv4()} e={e} />;\n          } else {\n            return (\n              <div\n                key={e.id}\n                className=\"flex flex-col border-2 border-blue-500 m-6 p-2 rounded-lg\"\n              >\n                <h1 className=\"font-bold block\">Title: </h1>\n                <a href={e.link} target=\"_blank\">\n                  {e.title}*\n                </a>\n\n                <h1 className=\"font-bold\">Tagline:</h1>\n                <p> {e.tagline}</p>\n\n                <h1 className=\"font-bold\">Pricing:</h1>\n                <p> {e.pricing}</p>\n\n                <h1 className=\"font-bold\">Category:</h1>\n                <p> {e.category}</p>\n\n                <div className=\"flex justify-between mt-4\">\n                  <div className=\"flex flex-col\">\n                    {e.details ? (\n                      <Link\n                        onClick={() => setPostId(e.id)}\n                        to={`/post/${e.title\n                          .split(' ')\n                          .join('')\n                          .toLowerCase()}`}\n                        className=\" block h-4 bg-green-200 rounded-lg  w-18 h-3/6 p-2  focus:outline-none\"\n                      >\n                        View Details\n                      </Link>\n                    ) : null}\n                    <button\n                      className=\"bg-red-200 rounded-lg p-2 w-16 mt-4 focus:outline-none\"\n                      onClick={() => handleDelete(e.id)}\n                    >\n                      Delete\n                    </button>\n                    <button\n                      className=\"bg-red-200 rounded-lg p-2  mt-4 w-16  focus:outline-none\"\n                      onClick={() => handleUpdate(e.id)}\n                    >\n                      Edit\n                    </button>\n                  </div>\n                </div>\n              </div>\n            );\n          }\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Editor.js",["59"],"/Users/zehairawan/Documents/Project/onethousandsaas/src/index.js",[],["60","61"],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/ForgotPassword.js",[],["62","63"],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Navbar.js",["64","65"],"import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst Navbar = () => {\n  const { currentUser, logout } = useAuth();\n  const history = useHistory();\n  const [error, setError] = useState('');\n\n  async function handleLogout() {\n    setError('');\n\n    try {\n      await logout();\n      history.push('/login');\n    } catch {\n      setError('Failed to log out');\n    }\n  }\n\n  return (\n    <div className=\"flex justify-between\">\n      <Link to=\"/\">Homepage</Link>\n      <Link to=\"/blog\">Blog</Link>\n      <Link to=\"/create-blogpost\">Manage Blogpost</Link>\n      <Link to=\"/create-detail\">Manage Detail</Link>\n\n      {/* <p> Welcome, {currentUser.email}</p> */}\n\n      {/* <Link to=\"/update-profile\">Update Profile</Link> */}\n\n      <button className=\"self-start\" onClick={handleLogout}>\n        Logout\n      </button>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Signup.js",[],["66","67"],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Blog/Blog.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/App.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/PrivateRoute.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Blog/Blogpost.js",["68","69"],"import React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { db } from '../../firebase';\n\nconst Blogpost = ({ match }) => {\n  const [blogPost, setBlogPost] = useState({\n    title: '',\n    content: '',\n    image: '',\n  });\n\n  const { title, content, image } = blogPost;\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const res = await db\n          .collection('blogpost')\n          .where('slug', '==', match.params.slugId)\n          .get();\n\n        res.forEach((doc) => {\n          const { content, title, image } = doc.data();\n          setBlogPost({ ...blogPost, title, content, image });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getData();\n  }, []);\n\n  return (\n    <div className=\"flex flex-col items-center mx-12\">\n      <h1 className=\"my-6 font-bold text-3xl\">{title}</h1>\n      <ReactMarkdown className=\"prose  w-full\" source={content}></ReactMarkdown>\n      <img src={image} className=\"w-3/6\"></img>\n    </div>\n  );\n};\n\nexport default Blogpost;\n","/Users/zehairawan/Documents/Project/onethousandsaas/src/component/UpdateProfile.js",[],"/Users/zehairawan/Documents/Project/onethousandsaas/src/component/Login.js",[],{"ruleId":"70","severity":1,"message":"71","line":18,"column":11,"nodeType":"72","messageId":"73","endLine":18,"endColumn":22},{"ruleId":"74","severity":1,"message":"75","line":117,"column":6,"nodeType":"76","endLine":117,"endColumn":8,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":248,"column":34,"nodeType":"80","endLine":248,"endColumn":49},{"ruleId":"70","severity":1,"message":"81","line":70,"column":9,"nodeType":"72","messageId":"73","endLine":70,"endColumn":20},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"82","replacedBy":"86"},{"ruleId":"84","replacedBy":"87"},{"ruleId":"70","severity":1,"message":"88","line":6,"column":11,"nodeType":"72","messageId":"73","endLine":6,"endColumn":22},{"ruleId":"70","severity":1,"message":"89","line":8,"column":10,"nodeType":"72","messageId":"73","endLine":8,"endColumn":15},{"ruleId":"82","replacedBy":"90"},{"ruleId":"84","replacedBy":"91"},{"ruleId":"74","severity":1,"message":"92","line":30,"column":6,"nodeType":"76","endLine":30,"endColumn":8,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":36,"column":7,"nodeType":"96","endLine":36,"endColumn":42},"no-unused-vars","'setPostData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setSaas'. Either include it or remove the dependency array.","ArrayExpression",["97"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'inputFields' is assigned a value but never used.","no-native-reassign",["98"],"no-negated-in-lhs",["99"],["98"],["99"],"'currentUser' is assigned a value but never used.","'error' is assigned a value but never used.",["98"],["99"],"React Hook useEffect has missing dependencies: 'blogPost' and 'match.params.slugId'. Either include them or remove the dependency array. You can also do a functional update 'setBlogPost(b => ...)' if you only need 'blogPost' in the 'setBlogPost' call.",["100"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"101","fix":"102"},"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Update the dependencies array to be: [setSaas]",{"range":"105","text":"106"},"Update the dependencies array to be: [blogPost, match.params.slugId]",{"range":"107","text":"108"},[2831,2833],"[setSaas]",[762,764],"[blogPost, match.params.slugId]"]